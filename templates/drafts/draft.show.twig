{% extends "site.twig" %} 

{% block title %}Draft - Overview{% endblock %} 


{% block bccontainer %}		
	{% include "widgets/breadcrumb.panel.twig" %}
	    <li><div class="btn-group">
    	<a href="{{ urlFor('me.drafts',{"idt":task.id}) }}" class="btn btn-small" >
    		<i class="icon-pencil"></i><span class="hidden-phone hidden-tablet"> {{ task.name }}</span></a>
	</div></li>
	<li><div class="btn-group">
    	<button class="btn btn-small active disabled">Overview</button>
    	<a href="{{ urlFor('me.draft.keywords',{"draft":draft.id}) }}" class="btn btn-small" >Keywords</a>
    	<a href="{{ urlFor('me.draft.sentence',{"draft":draft.id}) }}" class="btn btn-small" >Sentences</a>
    	<a href="{{ urlFor('me.draft.stats',{"draft":draft.id}) }}" class="btn btn-small" >Stats</a>
    </div></li>
	<li><div class="btn-group">
		<a class="btn btn-small dropdown-toggle" data-toggle="dropdown" href="#">Views <span class="caret"></span></a>
    	<ul class="dropdown-menu">
			<li><a href="{{ urlFor('me.draft.view.dispersion',{"draft":draft.id}) }}">Keyword Dispersion</a>
			<li class="divider"></li>
    	  	<li><a href="{{ urlFor('me.draft.view.graph',{"draft":draft.id,"graph":"graphke"}) }}">Keyword Graph</a>
    	  	<li><a href="{{ urlFor('me.draft.view.graph',{"draft":draft.id,"graph":"graphse"}) }}">Sentence Graph</a>
		</ul></div>
    </li>
    
{% endblock %}

{% block content %}
<div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-header">
		<h3> Display Options </h3>
	</div>
	<div class="modal-body">
	<div class="widget-content span3"> 
				   
						<legend>Structure</legend>
    					
									<label class="checkbox"> 
										<input  type="checkbox" value="#-s:t#" class="cStructure" checked="checked"> 
										Title
									</label>
									<label class="checkbox"> 
										<input  type="checkbox" value="#-s:h#" class="cStructure" checked="checked"> 
										Headings
									</label>
									<label class="checkbox"> 
										<input  type="checkbox" value="#+s:i#" class="cStructure" checked="checked"> 
										Introduction
									</label>
									<label class="checkbox"> 
										<input  type="checkbox" value="#+s#" class="cStructure" checked="checked"> 
										Body
									</label>
									<label class="checkbox"> 
										<input type="checkbox" value="#+s:c#" class="cStructure" checked="checked"> 
										Conclusion
									</label>
									<label class="checkbox"> 
										<input type="checkbox" value="#-s:q#;#-s:n#;#-s:p#" class="cStructure" checked="checked"> 
										Others
									</label>
									
				</div>
					<div class="widget-content span3"> 
											<legend> Sentences </legend>

							<div class="controls controls-row">
								<div class="control-group">
									<label class="">Top Sentences: <span id="amount" class="input unedidtable-input">0 - 0</span> </label>
									<div id="slider-range"></div>
									<span class="help-block">Set range of top sentences to display.</span> 
								</div>
								
							</div>
			
			</div> <div class="widget-content span3"> 
				<legend> Keywords 						
					<div class="box-icon">
							<a href="{{ urlFor('me.draft.act.keyword',{"draft":draft.id}) }}" class="btn-setting"><i class="icon-wrench" data-toggle="tooltip" title="Organise the keywords"></i></a>
					</div>
				</legend>
							<div class="controls controls-row">	
								<span class="help-block">Set the groups of keywords to
									display.</span> 
							</div>				
							
							{% for key,item in groups %}
								<div class="controls controls-row">	
									<label class="checkbox inline"> <input type="checkbox"
										value="{{ item.id }}" class="cKeyword"
										> {{ item.attr.name ? item.attr.name : "Default Group" }}
									</label>
								</div>								
							{% else %}
								<div class="controls controls-row">	
									<label class="checkbox inline"> <input type="checkbox"
										value="category_all" class="cKeyword"
										> Default Group
									</label>
								</div>
							{% endfor %}

			</div> <div class="widget-content span3"> 
				<legend> Essay </legend>

							<div class="controls controls-row">
								<div class="controls">
									<label class="checkbox inline"> <input type="checkbox"
										value="1" class="cTaskQuestion"> Show assignment question
									</label>

								</div>
							
							</div>
			</div> 
	</div>
	<div class="modal-footer">
		<button class="btn btn-primary" data-dismiss="modal" aria-hidden="true">OK</button>
	</div>
</div>

<div class="row-fluid">

<div class="widget widget-content">
<button data-target="#myModal" role="button" class="btn btn-primary pull-right" data-toggle="modal">
		Display Options <i class="icon-check icon-white"></i></button>
</div>


</div>

<div class="row-fluid"><div class="span12">

<div class="myessay openessay">

<div class="widget widget-content assignment">
	<p>{{ task.assignment | raw | nl2br }}</p>
</div>

<div class="widget widget-content widget-essay">
{% for par in parasenttok %}
	<div class="par-wrapper" {{ (par[0].tag)?"data-tag=#{ par[0].tag }":"" }}>
		<div class="par-tag" {{ (par[0].tag)?"data-tag=#{ par[0].tag }":"" }}></div>
		<div class="par-container">
			<p id="{{ loop.index0 }}" class='oe-par' >
	{% for sent in par %}
				<span class="oe-snt" data-index="{{ sent.id }}" data-tag="{{ sent.tag }}" {{ (sent.rank)? "data-rank="~sent.rank:"" }}>
				  {{ sent.text }}</span>
	{% endfor %}
			</p>
		</div>
	</div>
{% endfor %}
</div></div>

</div></div>

{% endblock %}



{% block injectCSS %}
<link href="/assets/openessayist/css/hljs.css" rel="stylesheet">
<style type="text/css">
.modal-backdrop,
.modal-backdrop.fade.in {
  opacity: 0.5;
  filter: alpha(opacity=50);
}


p.oe-par {
	/*margin: 1em 0 1em 0;*/
	white-space: inherit;
	/*border-left: 10px solid #D5D5D5;*/
	/*margin-left: -5px;*/
    /*padding-left: 10px;*/
}

/*p.oe-par[data-tag='#+s:i#'] {
	border-left: 10px solid red;
}

p.oe-par[data-tag='#+s:c#'] {
	border-left: 10px solid green;
}*/

p.oe-par:before
{
	content: "";
}

.widget-essay
{
	display: table;
}

.par-wrapper
{	
	/*display: table-row;*/
	border-bottom: 2px solid white;
    border-top: 2px solid white;
}
.par-tag
{
    display: table-cell;
    width: 12px;
    background-color: #D5D5D5 !important;;
    border-right: 8px solid white;
        text-align: center;
    vertical-align: bottom;
   
}

/*
.par-tag[data-tag='#-s:t#'] {
	background-color: #1F78B4 !important;;
}

.par-tag[data-tag='#-s:h#'] {
	background-color: #A6CEE3 !important;;
}

.par-tag[data-tag='#+s:i#'] {
	background-color: #FB8072 !important;;
}

.par-tag[data-tag='#+s:c#'] {
	background-color: #B3DE69 !important;;
}*/

.par-container
{
	display: table-cell;
}

span.oe-snt {
	white-space: normal;
	display: inline;
}

span.oe-snt[data-tag='#-s:t#']{
	font-weight: bold;
}
        			
span.oe-snt[data-tag='#-s:h#']{
	font-weight: bold;
}

span.oe-snt[data-rank].showmu:before {
	content:	attr(data-rank);
	background-color: #3A87AD;
	border-radius: 9px 9px 9px 9px;
	color: #FFFFFF;
	
	margin-right: 10px;
	padding-left: 9px;
	padding-right: 9px;
	text-shadow: none;
}

span.oe-snt[data-rank].showmu{
	background-color: #D3E3D3 !important;
}

.widget.assignment
{
	display: none;
}

.widget-content legend
{    font-size: 12px;
    font-weight: 800;
    margin-bottom: 10px;
    line-height: 18px;
}

.widget-content.collapse.in
{
	padding: 10px;
}
.widget-content.collapse
{
	padding: 0px;
}

.widget-header[data-target]
{
	cursor: pointer;
}

label.checkbox:before
{
	content: "";
}


.openessay .keyword
{
	cursor: help;
}

.ngram.showKW .keyword {
	text-shadow: none;
	font-weight: bold;
}

.ngram.showKW {
	border-style: dotted;
	border-width: 1px;
	padding-left: 10px;
	padding-right: 10px;
}

.ngram.category_all.showKW .keyword {
	color: #880000 !important;
}

{% for key,item in groups[1:] %}
.ngram.{{item.id}} .keyword {
}

.ngram.{{item.id}}.showKW {
	border-color: {{ item.attr.color }} !important;
}

.ngram.{{item.id}}.showKW .keyword {
	color: {{ item.attr.color }} !important;
}
{% endfor %}

</style>
{% endblock %}

{% block injectJS %}
	<script src="/assets/d3.js/colorbrewer.js"></script>
	<script src="/assets/highlight.js/highlight.pack.js"></script>
	<script src="/assets/jquery-ui-1.9.2.custom/js/jquery-ui-1.9.2.custom.js"></script>
	{% include "javascript/hljs.keywords.js.twig" %}
	<script>
	$(document).ready(function() {

		var sections =  {
					'#-s:t#': 'Title', 
					'#+s:s#': 'Summary', 
					'#+s:d#': 'Discussion', 
					'#+s:d_i#':'Discussion', 
					'#+s:i#': 'Introduction', 
					'#+s:c#': 'Conclusion', 
					'#-s:q#': 'Assignment',  
					'#+s:p#': 'Preface', 
					'#-s:h#': 'Heading', 
					'#-s:n#': 'Numerics', 
					'#-s:p#': 'Punctuation'					
					};
			          		
			
		sections =  {
				'????':'',
				'#+s:c#': 'Conclusion', 
				'#+s:d_i#':'Discussion', 
				'#+s:d#': 'Discussion', 
				'#+s:s#': 'Summary', 
				'#+s:i#': 'Introduction', 
				'#-s:t#': 'Title', 
				'#+s:p#': 'Preface', 
				'#-s:h#': 'Heading', 
				'#-s:n#': 'Numerics', 
				'#-s:q#': 'Assignment',  
				'#-s:p#': 'Punctuation'					
				};	
			
		
		//$("label.checkbox").disableSelection();
		$(".par-tag[data-tag]").each(function()
		{
			console.log(Object.keys(sections));
			var tag = $(this).attr('data-tag');
			var idx = $.inArray(tag,Object.keys(sections));
			idx = (idx==-1)?2:idx;
			var clr = colorbrewer.Paired[11][idx];
			console.log(tag + " " + idx + " " + clr);
			if (clr)
			{
				 $(this).attr('style', 'background-color: '+clr+' !important');
				 $(this).css('opacity', 0.5);
			}
			$(this).attr('title', sections[tag]);
		});
		
		
		// initialise the code highlighting
		$('div.openessay').each(function(i, e) {
			hljs.highlightBlock(e)
		});

		$("span.keyword").popover({
			animation: true,
			content: function(){ return "ffdfddffddfdf"},
			title: "keyword",
			trigger: 'hover'
				});
		


		$('.cTaskQuestion').change(function() {
			var cbox = this;
			var classname = ".widget.assignment";
			if (cbox.checked)
				//$(classname).show("fast");
				$(classname).css({'display':'block'});
			else
				$(classname).css({'display':'none'});
		
		});

		$('.cKeyword').change(function() {
			var cbox = this;
			var indicator = cbox.value;
			var classname = ".ngram."+indicator;
			$(classname).toggleClass("showKW");
		
		});
		
		$('.cStructure').change(function() {
			var cbox = this;
			var indicators = cbox.value.split(";");
			indicators.forEach(function(elt, idx, arr) {
				var classname = ".par-wrapper[data-tag='" + elt + "']";
				if (cbox.checked)
					//$(classname).show("fast");
					$(classname).css({'display':'block'});
				else
					$(classname).css({'display':'none'});
					//$(classname).hide("fast");
			});

		});
		
		// set the sentence slider
		$("#slider-range").slider({
			range : true,
			min : 0,
			max : 15,
			values : [ 0, 1 ],
			slide : function(event, ui) {
				$("#amount").text(ui.values[0] + " - " + ui.values[1]);

				$('span.oe-snt[data-rank]').each(function() {
					var tt = parseInt($(this).attr('data-rank'));
					var mina = ui.values[0];
					var maxa = ui.values[1];
					//alert(tt);
					$(this).removeClass('showmu');
					$(this).removeClass('dimshowmu');
					if (mina <= tt && tt <= maxa) {
						// if (tt == maxa)
						$(this).addClass('showmu');
						
						//console.log("show" + tt);
						// else
						// $(this).addClass('dimshow');

					}
				});



			}
		});
	});
	</script>
	
{% endblock %}
