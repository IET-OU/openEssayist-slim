{% extends "site.twig" %} 

{% set helpers = {
	'text': 'text only',
	'keyword': 'with key words',
	'sentence': 'with key sentences',
	'all': 'with all elements'
} %}


{% block title %}{{ task.name }} v{{ draft.version }} - Essay Overview ({{ helpers[mashup] }}){% endblock %} 
{% block subheader %}Your Draft : Overview ({{ helpers[mashup] }}){% endblock %} 


{% block bccontainer %}		
	{% include "widgets/breadcrumb.task.twig" %}
{% endblock %}

{% block navsubheader %}
	{% include "widgets/navbar.drafts.twig" with {'navsrc': 'me.draft.show'} %}
{% endblock %}

{% block content %}

<div class="row-fluid"><div class="span12">
	
	<div class="widget">
		<div class="widget-header">
			<h2>Your essay</h2>
		</div>
		<div class="widget-toolbar "><div class="btn-toolbar form-inline">    
			
			<div class="btn-group">
				<span class="group-label">Show: </span>		
				<a class="btn  {{ mashup=='text' ? 'active disabled'}}" 
					rel="tooltip" data-placement="bottom"
					title="Show only text and structure of essay" 
					{{ not (mashup=='text') ? 'href='~urlFor('me.draft.show',{'draft':draft.id,'cmd':''}) }}>Text</a>
				<a class="btn  {{ mashup=='keyword' ? 'active disabled'}}" 
					rel="tooltip" data-placement="bottom"
					title="Show key words and key phrases"  
					{{ not (mashup=='keyword') ? 'href='~urlFor('me.draft.showext',{'draft':draft.id,'cmd':'keyword'}) }}>Key Words</a>
				<a class="btn  {{ mashup=='sentence' ? 'active disabled'}}" 
					rel="tooltip" data-placement="bottom"
					title="Show key sentences"  
					{{ not (mashup=='sentence') ? 'href='~urlFor('me.draft.showext',{'draft':draft.id,'cmd':'sentence'}) }}>Key Sentences</a>
				<a class="btn  {{ mashup=='all' ? 'active disabled'}}" 
					rel="tooltip" data-placement="bottom"
					title="Combine all elements in the essay"  
					{{ not (mashup=='all') ? 'href='~urlFor('me.draft.showext',{'draft':draft.id,'cmd':'all'}) }}>All</a>
			</div>
			{% if mashup == 'all' %}
    		<div class="btn-group">
		    	<button class="btn  " 
		    		rel="tooltip" data-placement="bottom" 
		    		title="Select elements to display on the essay" 
		    		data-target="#modal_mashup" data-toggle="modal">
					More Options...</button>
			</div>
			{% endif  %}
        </div></div>
		
		
		
		<div class="widget-content assignment myessay openessay par-container" style="display: none;"><i class="icon-quote-left icon-4x pull-left icon-muted"></i>
			<p>{{ task.assignment | raw | nl2br }}</p>
		</div>
        
		<div class="widget-content widget-essay myessay openessay">
		
		{% for par in parasenttok %}
			
			<div class="par-wrapper" {{ (par.partag)?"data-tag=#{ par.partag }":"" }}>
				<div class="par-tag" {{ (par.partag)?"data-tag=#{ par.partag }":"" }}>
					<span class="icon-stack">
          			<i class="icon-circle-blank  icon-stack-base"></i>
          			<i class="icon-heading "></i>
        </span>
				</div>
				<div class="par-container">
					<p id="{{ loop.index0 }}" class='oe-par' >
			{% for sent in par %}
				{%  if sent is iterable %}
						<span class="oe-snt" data-index="{{ sent.id }}" data-tag="{{ sent.tag }}" {{ (sent.rank is defined)? "data-rank="~(sent.rank+1):"" }}>
						  {{ sent.text }}</span>
				{% endif %}
			{% endfor %}
					</p>
				</div>
			</div>
		{% endfor %}
		</div>        
        
		
	</div>

</div></div>


<div id="modal_mashup" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="modal-title" aria-hidden="true">
	<div class="modal-header">
		<h1 id="modal-title">Display Options</h1>
	</div>
	<div class="modal-body" >
	
	<p>Select the elements to show with the draft.</p>
	
	<form class="row-fluid" id="mashup-options">

	{% if not(config.structure.show is defined and config.structure.show == false) %}
	{% set cfg = config.structure %}
	{% set dsb = (cfg.modify is sameas(false))?"disabled" %}
	<div class="widget-content span3"><fieldset role="group" aria-labelledby="legend-struct"> 
		<legend id="legend-struct" role="description">Structure</legend>
    	<label class="checkbox"> 
			<input  type="checkbox" name="structure" value="#-s:t#" class="cStructure" {{ ('#-s:t#' is inOption(cfg.check))? "checked=\"checked\""}} {{ dsb }}> 
			Title
		</label>
		<label class="checkbox"> 
			<input  type="checkbox" name="structure" value="#-s:h#" class="cStructure" {{ ('#-s:h#' is inOption(cfg.check))? "checked=\"checked\""}} {{ dsb }}>  
			Headings
		</label>
		<label class="checkbox"> 
			<input  type="checkbox" name="structure" value="#+s:i#" class="cStructure" {{ ('#+s:i#' is inOption(cfg.check))? "checked=\"checked\""}} {{ dsb }}>  
			Introduction
		</label>
		<label class="checkbox"> 
			<input  type="checkbox" name="structure" value="#+s#" class="cStructure" {{ ('#+s#' is inOption(cfg.check))? "checked=\"checked\""}} {{ dsb }}>  
			Body
		</label>
		<label class="checkbox"> 
			<input type="checkbox" name="structure" value="#+s:c#" class="cStructure" {{ ('#+s:c#' is inOption(cfg.check))? "checked=\"checked\""}} {{ dsb }}>  
			Conclusion
		</label>
		<label class="checkbox"> 
			<input type="checkbox" name="structure" value="#-s:q#;#-s:n#;#-s:p#;#dummy#;#+s:p#" class="cStructure" {{ ('#-s:q#' is inOption(cfg.check))? "checked=\"checked\""}} {{ dsb }}>  
			Others
		</label>
									
	</fieldset></div>
	{% endif %}
	
	{% if not(config.sentence.show is defined and config.sentence.show == false) %}
	<div class="widget-content span3"><fieldset role="group" aria-labelledby="legend-sent">
		<legend id="legend-sent" role="description"> Sentences </legend>

		<label class="checkbox"> 
			<input  type="checkbox" name="sentence" value="show" class="cSentence" {{ dsb }}> 
			Show the key sentences
		</label>
	</fieldset></div> 
	{% endif %}
	
	{% if not(config.keyword.show is defined and config.keyword.show == false) %}
	{% set cfg = config.keyword %}
	<div class="widget-content span3"><fieldset role="group" aria-labelledby="legend-keyword">
		<legend id="legend-keyword" role="description"> Key Words </legend>
						
							
		{% for key,item in groups %}
		<div class="controls controls-row">	
			<label class="checkbox inline">
				<input type="checkbox" name="keywords" value="{{ item.id }}" class="cKeyword"
					{{ (item.id is inOption(cfg.check,false))? "checked=\"checked\""}}> {{ item.attr.name ? item.attr.name : "Default Group" }}
			</label>
		</div>	
		{% endfor %}
	</fieldset> </div>
	{% endif %}
	 
	<div class="widget-content span3"> <fieldset role="group" aria-labelledby="legend-task">
		<legend id="legend-task" role="description"> Assignment </legend>
		<div class="controls controls-row">
			<div class="controls">
				<label class="checkbox inline"> 
					<input type="checkbox" value="show" 
							name="task" class="cTaskQuestion" checked="checked"> Show the question
				</label>
			</div>
							
		</div>
	</fieldset></div> 
	
	</form> {# end of form #}
	
	<div class="alert alert-success" id="modal-notification" aria-live="polite"></div>

	</div>	{# end of modal body #}

	<div class="modal-footer">
		<button class="btn pull-left" id="modal-reset" title="Reset the dialog box with its default values">Reset</button>
		<button class="btn btn-primary" data-dismiss="modal" title="Close the dialog box">OK</button>
	</div>
</div>

{% endblock %}



{% block injectCSS %}
{{ parent() }}
<link href="{{ app_base }}/assets/openessayist/css/hljs.css" rel="stylesheet">
<style type="text/css">


.btn-toolbar .title {
  display: block;
  float: left;
  margin-top: -4px; /* Recover part of margin set in child Header nodes */
  margin-left: 10px;
  font-size: 20px;
  font-weight: 200;
  color: #777777;
  text-shadow: 0 1px 0 #ffffff;
}

.icon-heading
{
	vertical-align: middle;
	color: black;
	font-family: sans-serif;Arial;
	font-weight: bolder;
}

p.oe-par {
	/*margin: 1em 0 1em 0;*/
	white-space: inherit;
	/*border-left: 10px solid #D5D5D5;*/
	/*margin-left: -5px;*/
    /*padding-left: 10px;*/
}

/*p.oe-par[data-tag='#+s:i#'] {
	border-left: 10px solid red;
}

p.oe-par[data-tag='#+s:c#'] {
	border-left: 10px solid green;
}

p.oe-par:before
{
	content: "";
}*/

.widget-essay
{
	/*display: table;*/
}

.par-wrapper
{	
	/*display: table-row;*/
	border-bottom: 2px solid white;
    border-top: 2px solid white;
}
.par-tag
{
    display: table-cell;
    width: 18px;
    background-color: #D5D5D5 !important;;
    border-right: 8px solid white;
        text-align: center;
    vertical-align: top;
    cursor: pointer;
    font-size: 11px;
    font-weight: bolder;
    min-width: 50px;
   
}

/*.par-tag[data-tag='#+s:c#']:after
{
	content:"Conclusion";
}*/

.par-tag[data-tag='#dummy#'] {
	background-color: rgba( 213, 213 ,213,0.9) !important;
	color: rgba(85 ,85 ,85 ,0.5) !important;;
}

.par-tag[data-tag='#+s:i#'] {
	background-color: rgba( 246, 184, 184,0.25) !important;
	color: rgba(246, 184, 184,0.5) !important;;
}

.par-tag[data-tag='#-s:h#'] {
	background-color: rgba(202 ,178 ,214,0.25) !important;;
	color: rgba(202 ,178 ,214,0.5) !important;;
}

.par-tag[data-tag='#+s#'] {
	background-color: rgba(178 ,223 ,138,0.25) !important;;
	color: rgba(178 ,223 ,138,0.5) !important;;
}

.par-tag[data-tag='#+s:c#'] {
	background-color: rgba(31, 120 ,180 ,0.25) !important;;
	color: rgba(31, 120 ,180 ,0.5) !important;;
}

.par-tag[data-tag='#-s:q#'] {
	background-color: rgba(106, 61, 154  ,0.25) !important;;
	color: rgba(106, 61, 154  ,0.5) !important;;
}

.par-tag[data-tag='#-s:t#'] {
	background-color: rgba( 253, 191, 111 ,0.25) !important;;
	color: rgba(253, 191, 111  ,0.5) !important;;
}

.par-tag[data-tag='#+s:p#'] {
	background-color: rgba( 253, 191, 111 ,0.25) !important;;
	color: rgba(253, 191, 111  ,0.5) !important;;
}


.par-tag[data-tag='#+s#'] .icon-heading:before
{
	content:"D";
}
.par-tag[data-tag='#+s:c#'] .icon-heading:before
{
	content:"C";
}

.par-tag[data-tag='#-s:h#'] .icon-heading:before
{
	content:"H";
}

.par-tag[data-tag="#+s:i#"] .icon-heading:before
{
	content:"I";
}

.par-tag[data-tag="#-s:q#"] .icon-heading:before
{
	content:"Q";
}

.par-tag[data-tag="#-s:t#"] .icon-heading:before
{
	content:"T";
}

.par-tag[data-tag="#dummy#"] .icon-heading:before
{
	content:"U";
}

.par-tag[data-tag="#+s:p#"] .icon-heading:before
{
	content:"P";
}


/*
.par-tag[data-tag='#-s:t#'] {
	background-color: #1F78B4 !important;;
}

.par-tag[data-tag='#-s:h#'] {
	background-color: #A6CEE3 !important;;
}

.par-tag[data-tag='#+s:i#'] {
	background-color: #FB8072 !important;;
}

.par-tag[data-tag='#+s:c#'] {
	background-color: #B3DE69 !important;;
}*/

.par-container
{
	display: table-cell;
}

span.oe-snt {
	white-space: normal;
	display: inline;
}

span.oe-snt[data-tag='#-s:t#']{
	font-weight: bold;
}
        			
span.oe-snt[data-tag='#-s:h#']{
	font-weight: bold;
}

span.oe-snt[data-rank].showmu:before {
	content:	attr(data-rank);
	background-color: #3A87AD;
	border-radius: 9px 9px 9px 9px;
	color: #FFFFFF;
	
	margin-right: 10px;
	padding-left: 9px;
	padding-right: 9px;
	text-shadow: none;
}

span.oe-snt[data-rank].showmu{
	background-color: #D3E3D3 !important;
}

.widget.assignment
{
	display: none;
}

.assignment p{
font-style: italic;
 text-align: justify;
 }

.widget-content legend
{    font-size: 12px;
    font-weight: 800;
    margin-bottom: 10px;
    line-height: 18px;
}

.widget-content.collapse.in
{
	padding: 10px;
}
.widget-content.collapse
{
	padding: 0px;
}

.widget-header[data-target]
{
	cursor: pointer;
}

label.checkbox:before
{
	content: "";
}


.ngram.showKW > .keyword
{
	/*cursor: pointer;*/
}

.ngram.showKW .keyword {
	text-shadow: none;
	font-weight: bold;
}

.ngram.showKW {
	border-style: dotted;
	border-width: 1px;
	padding-left: 10px;
	padding-right: 10px;
}

.ngram.category_all.showKW .keyword {
	color: #880000 !important;
}


/*.ngram.showKW > .keyword:first-child:before {
    content: " !Key: ";
    font-size: 10;
}

.ngram.showKW > .keyword:last-child:after {
    content: "!     ";
    font-size: 10;
}*/

{% for key,item in groups[1:] %}		
.ngram.{{item.id}} .keyword {
}

.ngram.{{item.id}}.showKW {
	border-color: {{ item.attr.color }} !important;
}

.ngram.{{item.id}}.showKW .keyword {
	color: {{ item.attr.color }} !important;
}
{% endfor %}

.popover-content .legend-titlebar
{
	display:table-row;
}

.popover-content .par-tag
{
	cursor: default;
}

.popover-content .legend-title
{
	font-weight: bolder; 
	display: table-cell;
	width: 100%;
}

.popover-content .legend-content
{
	margin-top: 10px;
}

.popover-content .legend-content:empty
{
	display: none;
}

#modal-notification
{
	margin-bottom: 0px;
}
</style>
{% endblock %}

{% block injectJS %}
	{{ parent() }}
<script src="{{ app_base }}/assets/d3.js/colorbrewer.js"></script>
<script src="{{ app_base }}/assets/highlight.js/highlight.pack.js"></script>
	
<script id="tag-popover">
$(document).ready(function() {
	var sections = 
	{
		'#dummy#':	{title:'Unrecognised', desc: 'The system could not decide what is the nature of this paragraph'},
		'#+s:c#': 	{title:'Conclusion', desc: 'This paragraph is part of the conclusion of your essay.'}, 
		'#+s:d_i#':	{title:'Discussion',desc: 'This paragraph is part of the discusssion of your essay.'}, 
		'#+s#':		{title:'Discussion',desc: 'This paragraph is part of the discusssion of your essay.'}, 
		'#+s:s#': 	{title:'Summary', desc: 'This paragraph is part of the summary.'},
		'#+s:i#':	{title:'Introduction', desc: 'This paragraph is part of the introduction.'},
		'#-s:t#':	{title:'Title', desc: ''},
		'#+s:p#':	{title:'Preface', desc: ''},
		'#-s:h#':	{title:'Heading', desc: 'The system has identified this paragraph as being a heading.'},
		'#-s:n#':	{title:'Numerics', desc: ''},
		'#-s:q#':	{title:'Assignment',  desc: ''},
		'#-s:p#':	{title:'Punctuation',desc: ''},				
	};	

	keys=[];
	for (v in sections) keys.push(v);
		
	var tag_tooltip = null;
	$(".par-wrapper .par-tag")
		.attr('aria-label','This is an aria label')
		.attr('title','This is a title')
		.attr('role','region')
		.attr('tabindex','0')
		/*	.popover({
		container: "body",
		placement: "right",
		html: true,
		template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>',
		trigger: "click hover", //"manual"
		content: function(){ 
			
			return 	"<div class='legend-titlebar'><div data-tag='"+$(this).attr('data-tag')+"' class='par-tag'>"
					+ "<span class='icon-stack'>"
  					+ "<i class='icon-circle-blank  icon-stack-base'></i>"
  					+ "<i class='icon-heading '></i></span>"
					+ "</div><div class='legend-title'>" + sections[$(this).attr('data-tag')].title + "</div></div>"
					//+ "<div class='legend-content'>"+ sections[$(this).attr('data-tag')].desc +"</div>"
					;
		}
	});*/
	;

	$(".par-tagXX").tooltip({
		title : function(){ 
				return sections[$(this).attr('data-tag')].title;
			},
			container: "body",
			placement: "right",
			
	});
		
});
</script>	

{% if mashup in ['keyword','all'] %}
	{% include "javascript/hljs.keywords.js.twig" %}

<script id="tag-keywords">
$(document).ready(function() {
	
	// initialise the code highlighting
	$('.par-container').each(function(i, e) {
		hljs.highlightBlock(e)
	});


	$('.cKeyword').change(function() {
		var cbox = this;
		var indicator = cbox.value;
		var classname = ".ngram."+indicator;
		console.log("Group activated :  " + indicator + " (" + cbox.checked + ")");
		if (cbox.checked)
			$(classname).addClass("showKW");
		else
			$(classname).removeClass("showKW");
		var indlabel = $.trim($(this).parent("label").text());
		$("#modal-notification").html("The key words from the group <strong>" +  indlabel + "</strong> are now " + (cbox.checked? "visible with" : "hidden from") +
		 " the text of your draft.");
	});

	$('.cKeyword').prop('checked', true);
	$('.cKeyword').trigger('change');

	$(".ngram[data-keyword]").each(function(){
		$(this).attr("aria-label"," :Keyword " + $(this).data("keyword")+ "; ");
	});	
	
});
</script>
{% endif %}

{% if mashup in ['sentence','all'] %}
<script id="tag-sentences">
$(document).ready(function() {

	$('.cSentence').change(function(a,b,c) {
		var cbox = this;
		var indicator = cbox.value;
		var classname = "span.oe-snt[data-rank]";
		console.log("Sentence activated :  " + indicator + " (" + cbox.checked + ")");
		if (cbox.checked)
			$(classname).addClass("showmu");
		else
			$(classname).removeClass("showmu");
		$("#modal-notification").html("Key sentences are now " + (cbox.checked? "visible in" : "hidden from") +
				 " the text of your draft.");
	});

	$('.cSentence').prop('checked', true);
	$('.cSentence').trigger('change');
});
</script>
{% endif %}

{% if mashup in ['all'] %}
<script id="tag-all">
$(document).ready(function() {

	$('.cTaskQuestion').change(function() {
		var cbox = this;
		var classname = ".widget-content.assignment";
		if (cbox.checked)
			$(classname).css({'display':'block'});
		else
			$(classname).css({'display':'none'});
		$("#modal-notification").html("The <strong>assignment question</strong> is now " + (cbox.checked? "visible with" : "hidden from") +
		 " the text of your draft.");
			
	});


	
	$('.cStructure').change(function() {
		var cbox = this;
		var indicators = cbox.value.split(";");
		var indlabel = $.trim($(this).parent("label").text());
		indicators.forEach(function(elt, idx, arr) {
			var classname = ".par-wrapper[data-tag='" + elt + "']";
			if (cbox.checked)
				//$(classname).show("fast");
				$(classname).css({'display':'block'});
			else
				$(classname).css({'display':'none'});
				//$(classname).hide("fast");
		});
		$("#modal-notification").html("The <strong>" + indlabel + "</strong> paragraphs are now " + (cbox.checked? "visible in" : "hidden from") +
		 " the text of your draft.");
		
	});
	

	$('#modal-reset').click(function(){
		var nb = $('#mashup-options input[type=checkbox]:not(:checked)').length;
		if (nb ==0) return;

		$('#mashup-options input[type=checkbox]').each(function(){
		    $(this).prop('checked','checked');
		});
		$('.cKeyword').trigger('change');
		$('.cTaskQuestion').trigger('change');
		$('.cStructure').trigger('change');
		$('.cSentence').trigger('change');
		
	});

	$('.cTaskQuestion').trigger('change');
	$('.cStructure').trigger('change');
	
});
</script>
{% endif %}

<script id="mashup-init">
$(document).ready(function() {
	var h = $("form").serializeArray();
	openEssayist.log4j("{{ constant('TutorController::ACTION_MASHUP_INIT') }}",h);

    $('#modal_mashup').on('show', function ()
	{
    	console.log("open");    
		$("#modal-notification").html("");
});


	$('#modal_mashup').on('hide', function ()
	{
    	openEssayist.log4j("{{ constant('TutorController::ACTION_MASHUP_SELECT') }}",h);
		console.log("clode");    
	});
	
});

</script>
{% endblock %}
