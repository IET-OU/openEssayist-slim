{% extends "site.twig" %} 
{% import "widgets/ngram.macro.twig" as ngram %}

{% block title %}{{ task.name }} v{{ draft.version }} - Organise Key Words{% endblock %} 
{% block subheader %}Your Draft : Organise the Key Words{% endblock %} 

{% block navsubheader %}
	{% include "widgets/navbar.drafts.twig" with {'navsrc': 'me.draft.act.keyword'} %}
{% endblock %}


{% block injectCSS %}
	{{ parent() }}
 <style>
 .sortable li.ui-state-highlight:empty
{
	 list-style-type: none;
	 margin: 0 8px 4px 0;
	height: 40px;
    width: 80px;display: inline-block;
}

 [role="list"] {
    -moz-box-sizing: content-box;
    background: none repeat scroll 0 0 rgba(0, 0, 0, 0.05);
    border-radius: 0px 0px 15px 15px;
    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.1) inset;
    clear: left;
    display: block;
   
    padding: 15px 0 0 15px;
  	margin: 0;
    /*max-height: 120px;
    overflow-y: auto;*/    
    position: relative;
    /*z-index: 1000;*/
	
}

 [role="list"]:focus {
    box-shadow: 0 1px 2px 7px red inset
}
 
[role="listitem"] {
    -moz-box-sizing: border-box;
    background: none repeat scroll 0 0 #AAC8FA;
    border: 2px solid rgba(0, 0, 0, 0.25);
    border-radius: 10px 10px 10px 10px;
    box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.5);
    color: #445566;
    display: inline-block;
    /*float: left;*/
    font-size: 0.9em;
    letter-spacing: -0.08em;
    line-height: 14px;
    margin: 0 10px 10px 0;
    position: relative;
    text-align: center;
    text-shadow: 0 1px 2px rgba(255, 255, 255, 0.5);
    vertical-align: bottom;
    
   
    height: 40px;
    padding: 5px;
    min-width: 60px;
    /*z-index: 1001;*/
    
} 

[role="listitem"]:hover, [role="listitem"]:focus
{
    box-shadow: 0 0 2px 4px #6496FA, 0.04em 0.04em 0.1em rgba(0, 0, 0, 0.5);
    cursor: move;
    outline: 1px solid transparent;
    cursor: -moz-grab;
}

[aria-grabbed='true']
{    box-shadow: 0 0 2px 4px #6496FA, 0.04em 0.04em 0.1em rgba(0, 0, 0, 0.5);
    cursor: move;
    outline: 1px solid transparent;
    cursor: -moz-grab;

	background: url("images/ui-bg_highlight-soft_75_ffe45c_1x100.png") repeat-x scroll 50% top #FFE45C;
	
}
#container-user-group > .span4
{
	margin: 5px;	
}



</style>
 {% endblock %}


{% block bccontainer %}		
	{% include "widgets/breadcrumb.task.twig" %}
{% endblock %}



{% block content %}

<div class="row-fluid"><div class="span12">

<div class="widget" aria-describedby="app-group-title" aria-labelledby="app-group-title" role="application">
	<div class="widget-header">
		<h2 id="app-group-title">Your Groups ({{ groups|length }})</h2>
	</div>
	{% if task.isopen %}
	<div class="widget-toolbar">
		<div class="btn-toolbar">    
    		<button id="catg-Save" class="btn btn-small btn-primary disabled">Save</button>
    		<button id="catg-Reset" data-toggle="modal" data-target="#modal-reset" class="btn btn-small ">Reset</button>
    		<button id="catg-New" {{ (groups|length == 10)? "disabled" }} class="btn btn-small">New Group...</button>
    	</div>
	</div>
	{% endif %}
<div class="widget-content" id="container-groups">
	
	

	

{% set lkw = (groups['category_all'] is defined)? groups['category_all']['keywords'] : keywords   %}
<div class="row-fluid"><div class="span12">
<div class="widget">
	<div class="widget-header">
		<h2 id="app-src-title">"Default Group" - All Key Words ({{ lkw|length }})</h2></div>
	<div class="source group">
	<ul class="sortable" id="category_all" aria-labelledby="app-src-title" aria-dropeffect="move" role="list">
		{% if groups.category_all is defined %}
		
			{% for key2,item2 in groups.category_all.keywords  %}
			{{ ngram.toLI(keywords[item2]) }}
			{% endfor %}
			{% else %}
		
			{% for key,item in keywords %}
			{{ ngram.toLI(item) }}
			{% endfor %}
		{% endif %}
	</ul>	
	</div>

</div>
</div></div>



			
			<div class="row-fluid" id="container-user-group">
			{% set groups = {"rr":"edd","test" : {"dd": "a","df":"b" }
,"test1" : {"dd": "a","df":"b" }
,"test2" : {"dd": "a","df":"b" }
,"test3" : {"dd": "a","df":"b" }
						} %}
			
			{% for key,item in groups[1:] %}
				<div class="span4" id="cat_{{ loop.index0 }}">
					
					<div class="widget-header"><h3>
								<span class="cat_color" style="background-color: {{ item.attr.color }};"></span>
								<span class="cat_name" id="app-dest{{ loop.index0 }}-title">{{ item.attr.name }}</span></h3>
							{% if task.isopen %}
							<div class="box-icon">
							<a href="#" class="btn-setting" title="Edit the group properties" data-toggle="modal" data-target="#dlgSetting" data-category="cat_{{ loop.index0 }}"><i class="icon-wrench"></i></a>
							</div>
							{% endif %}
						</div>
					<div class="source group" id="">
					<ul class="sortable" id="{{ key }}" aria-labelledby="app-dest{{ loop.index0 }}-title" aria-dropeffect="none" role="list"> 
						{% for key2,item2 in item.keywords  %}
								{{ ngram.toLI(keywords[item2]) }}
							{% endfor %}
					</ul>
					</div>
					<div class="widget-content info hide" >
							<input class="grp_name" type="text" placeholder="Type something..." value="{{ item.attr.name }}">
							<input class="grp_color" type="text" value="{{ item.attr.color }}">
							<textarea class="grp_desc" placeholder="Type something...">{{ item.attr.desc }}</textarea>
					</div>
				</div>
			{% endfor %}
		
			
			
		</div>
	
	
	</div></div>
</div></div>


<!-- Template for Keyword group -->
<div class="span4 hide" id="cat_template">
	<div class="widget-header"><h3><span class="cat_color"></span><span class="cat_name">Group Template</span></h3>
		<div class="box-icon">
			<a href="#" class="btn-setting" data-toggle="modal" data-target="#dlgSetting" data-category="ref_template"><i class="icon-wrench"></i></a>
		</div>
		</div>
	<div class="widget-content" id="">
		<ul class="nonsortable" id="sort_template" style="min-height: 50px">
		</ul>
	</div>
	<div class="widget-content info hide" id="">
		<input class="grp_name" type="text" placeholder="Type something...">
		<input class="grp_color" type="text" value="#3b98bd">
		<textarea class="grp_desc" placeholder="Type something..."></textarea>
	</div>
</div>


{% endblock %}


{% block injectJS %}
	{{ parent() }}
<script src="{{ app_base }}/assets/jquery-ui-1.9.2.custom/js/jquery.blockUI.js"></script>
<script src="{{ app_base }}/assets/d3.js/d3.v3.min.js"></script>
<script src="{{ app_base }}/assets/keyboardjs/keyboard.js"></script>
	{#<script src="{{ app_base }}/assets/openessayist/js/utils.js"></script>
<script src="{{ app_base }}/assets/openessayist/js/dnd.js"></script>#}
<script>
DnDWrapper = function() {
	var DnDWrapper = {
			version		: "1.0" ,
	    	STATE_CLEAR : 'clear',	// No action started
	    	STATE_ITEM	: 'item',	// item has been selected
	    	STATE_LIST	: 'list',	// list has been selected
	    };
	DnDWrapper.state = DnDWrapper.STATE_CLEAR;

	var _selectItem  = null;
	var _selectList = null;

	DnDWrapper.init = function()
	{
		KeyboardJS.on('shift + tab, tab', this.onTab);
		KeyboardJS.on('esc', this.onClear);
		KeyboardJS.on('enter', this.onEnter);
	
	};

	DnDWrapper.onClear = function()
	{
		if (DnDWrapper.state == DnDWrapper.STATE_ITEM)
		{
			console.log("ESCAPE");
			//var focused = $(':focus');
			$(_selectItem).attr("aria-grabbed",'false');
			$(_selectItem).parent().removeClass("activated");
			$.unblockUI(); 
			$("#container-groups").each(function(e){
				$(this).css("z-index","auto");
			});
			$("[role='list']").attr( 'tabindex', -1);
			$(_selectItem).parent().attr( 'tabindex', -1);
			$(_selectItem).focus();
		}
		_selectItem = null;
		_selectList = null;
		DnDWrapper.state = DnDWrapper.STATE_CLEAR;
	}

	DnDWrapper.onTab = function(e,i,code)
	{
		if (DnDWrapper.state != DnDWrapper.STATE_ITEM) return;
		var focusables = $("[role='list']");
		var current = focusables.index(_selectList);
		var next = null;
		if ("tab" == code)
			next = focusables.eq(current+1).length ? focusables.eq(current+1) : focusables.eq(0);
		else
			next = focusables.eq(current-1).length ? focusables.eq(current-1) : focusables.eq(eq.length-1);
		next.focus();
		_selectList = next;
		console.log("  " + _selectItem.attr("id"));	
	}
	
	
	DnDWrapper.onEnter = function()
	{
		if (DnDWrapper.state == DnDWrapper.STATE_ITEM)
		{
			$(_selectItem).hide().appendTo(_selectList).show('slow');
			DnDWrapper.onClear();
		}
		else if (DnDWrapper.state == DnDWrapper.STATE_CLEAR)
		{
			var focused = $(':focus');
			var role = focused.attr("role");
			if (!focused || "listitem" != role) return;
			_selectItem = focused;
			
			console.log("  " + _selectItem.attr("id") + " " + role);
			$(_selectItem).attr("aria-grabbed",'true');
			$("#container-groups").each(function(e){
				$(this).css({'position': 'relative', 'z-index':'5000'});
				});
			$("[role='list']").attr( 'tabindex', 0);
			$.blockUI({  bindEvents: true, constrainTabKey: true, message: null, overlayCSS: { "z-index" : '1040' } });
			_selectList = $(_selectItem).parent();
			$(_selectList).focus(); 
			DnDWrapper.state = DnDWrapper.STATE_ITEM;
		}
	
	};

	return DnDWrapper;
}();

$(document).ready(function() {
	var is_dirty = false;
	var stack_bar_bottom = {"dir1": "up", "dir2": "right", "spacing1": 0, "spacing2": 0};
	$.pnotify.defaults.delay = 1000;
	var color = d3.scale.category10().range(); 
	color = color.slice({{ groups|length ? groups|length-1:0  }});
	console.log(color);

	DnDWrapper.init();
	
	$( ".sortable" ).sortable({
		placeholder : "ui-state-highlight",
		connectWith : ".sortable",
		/*zIndex: 1070,*/
		out : function(event, ui) {
			// triggered when DOM has changed after DnD
			console.log("OUT > " + $(ui.item).attr("id") + " | " + $(this).attr("id"));
			},
			
		over : function(event, ui) {
				// triggered when DOM has changed after DnD
				console.log("OVER > " + $(ui.item).attr("id")+ " | " + $(this).attr("id"));
				},
				receive : function(event, ui) {
					// triggered when DOM has changed after DnD
					console.log("RECEIVE > " + $(ui.item).attr("id")+ " | " + $(this).attr("id"));
					},
		deactivate : function(event, ui) {
			// triggered when DOM has changed after DnD
			console.log("DEACTIVATE > " + $(ui.item).attr("id")+ " | " + $(this).attr("id"));
			$(ui.item).attr("aria-grabbed",'false');
			$(this).removeClass("activated");
			//$(".modal-backdrop").remove();
			//$.unblockUI(); 
			$("#container-groups").each(function(e){
				$(this).css("z-index","auto");
				});
			
		},
		create : function(event, ui) {
			// triggered when DOM has changed after DnD
			console.log("CREATE > " + $(ui.item).attr("id")+ " | " + $(this).attr("id"));
			},
		update : function(event, ui) {
			// triggered when DOM has changed after DnD
			console.log("UPDATE > " + $(ui.item).attr("id")+ " | " + $(this).attr("id"));
			},
		change : function(event, ui) {
				// triggered when DOM has changed after DnD
				console.log("CHANGE > " + $(ui.item).attr("id")+ " | " + $(this).attr("id"));
				},
		activate : function(event, ui) {
				// triggered when DOM has changed after DnD
			console.log("ACTIVATE > " + $(ui.item).attr("id")+ " | " + $(this).attr("id"));
			$(ui.item).attr("aria-grabbed",'true');
			$(this).addClass("activated");
			//$.blockUI({ message: null, overlayCSS: { "z-index" : '1040' } });
			$("#container-groups").each(function(e){
				//$(this).css({'position': 'relative', 'z-index':'1500'});
				});
			
			//if ( !$(".modal-backdrop").length)
			//	$('<div class="modal-backdrop"></div>').appendTo(document.body);
			//$.blockUI({ message: null, overlayCSS: { "z-index" : '1040' } });					
		},
		beforeStop : function(event, ui) {
				// triggered when DOM has changed after DnD
			console.log("BEFORESTOP > " + $(ui.item).attr("id")+ " | " + $(this).attr("id"));
		}
		
	}).disableSelection();

	
	

	var onClickNew =  function(e) {
		console.log("new group created ...");

		var holder = $('#container-user-group > .row-fluid :last');
		var allcats = holder.find(".span4");
		var nCats = allcats.length;
	
		var n = holder.children().length;
		
		var template = $('#cat_template').clone();

		var title = template.find("div.widget-header > h3 > .cat_name  ");
		if (title) title.text("Group " + (nCats+1));
		template.removeClass('hide');
		template.removeAttr('id');

		var info = template.find('.nonsortable');
		if (info)
			{	info.removeClass('nonsortable');
				info.addClass('sortable');
			}
				
		
		if (n!=3)
		{
			template.appendTo(holder);
		}
		else
		{
			var newElement = $('<div class="row-fluid"></div>');
			template.appendTo(newElement);
			
			newElement.appendTo("#widget-content-cats");
			// set the dropable widgets
		}

		var info = template.find('.grp_name');
		if (info) info.val("Group " + (nCats+1));

		var clr = color.shift();
		info = template.find('.grp_color');
		if (info) info.val(clr);
		g = template.find('.cat_color');
		if (g) g.css('background-color',clr);
		
		holder = $('#widget-content-cats');
		allcats = holder.find(".span4");
		nCats = allcats.length;
		allcats.each(function(index)
			{
				$(this).attr('id','cat_'+index); 
				var setting = $(this).find(".btn-setting");
				if (setting) setting.attr('data-category','cat_'+index);
				var close = $(this).find(".btn-close");
				if (close) close.attr('data-category','cat_'+index);
				var dropz = $(this).find(".sortable");
				dropz.attr('id','category_'+index); 
			});

		if (nCats==9)
		{
			$('#catg-New').attr('disabled','disabled');
		}
		is_dirty = true;	
		$("#catg-Save").removeClass("disabled");
		
		//updateSortables();
	};

	$("li[role='listitem']").click(function(){
		$(this).focus();
		})

	$("#catg-New").click(onClickNew);
	$("#catg-Reset").click(function()
		{
			$.blockUI({ message: null, overlayCSS: { "z-index" : '1040' } });
		});
	
	
});
</script>

{% endblock %}