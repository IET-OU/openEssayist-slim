{% extends "site.twig" %} 

{% block title %}Draft - Visualisation (Dispersion){% endblock %} 
{% block subheader %}Draft - Visualisation (Dispersion){% endblock %} 


{% block bccontainer %}		
	{% include "widgets/breadcrumb.task.twig" %}
{% endblock %}

{% block navsubheader %}
	{% include "widgets/navbar.drafts.twig" with {'navsrc': 'me.draft.view.dispersion'} %}
{% endblock %}

{% block content %}

<div class="row-fluid"><div class="span12">

<div class="widget">
	<div class="widget-header" data-toggle="collapse" data-target="#demo">
		<h3>Keyword Dispersion</h3>
	</div>
	
	<div class="widget-toolbar">
		<div class="btn-toolbar" id="options">
			<div class="btn-group option-set"  data-toggle="buttons-radio" data-option-key="sortBy">
				<button title="Zoom by essay structure" class="btn-setting btn btn-small active" data-option-value="x">Structure</button>
				<button title="Zoom by key word" class="btn-setting btn btn-small" data-option-value="y">Key Word</button>
				<button title="Zoom by both side" class="btn-setting btn btn-small" data-option-value="xy">Both</button>
			</div>
		</div>
	</div>
	
	
	<div class="widget-content">
		<div id="container" style="height: 600px;margin: 0 auto">
			<div id="resizer" >
				<div id="inner-resizer"></div>
			</div>
		</div>
	</div>
</div>
</div></div>

{% endblock %}

{% block injectJS %}
	{{ parent() }}
<script src="{{ app_base }}/assets/d3.js/colorbrewer.js"></script>
<script src="{{ app_base }}/assets/highcharts/js/highcharts.js"></script>
<script src="{{ app_base }}/assets/highcharts/js/modules/exporting.js"></script>
<script type="text/javascript">
$(document).ready(function() {
	var chart = null;
	var chartOptions = null;

	$('.btn-setting').click(function(){
		var data = $(this).data('option-value');
		var zoomtype = chartOptions.chart.zoomType;
		if (data==zoomtype) return;

		chartOptions.chart.zoomType = data;
		chart = new Highcharts.Chart(chartOptions);;
	});

	sections =  {
			'????':'',
			'#+s:c#': 'Conclusion', 
			'#+s:d_i#':'Discussion', 
			'#+s:d#': 'Discussion', 
			'#+s:s#': 'Summary', 
			'#+s:i#': 'Introduction', 
			'#-s:t#': 'Title', 
			'#+s:p#': 'Preface', 
			'#-s:h#': 'Heading', 
			'#-s:n#': 'Numerics', 
			'#-s:q#': 'Assignment',  
			'#-s:p#': 'Punctuation'					
			};
	
	
	$('#resizer').resizable({
		ghost: false,
		animate: false,
	    // On resize, set the chart size to that of the 
	    // resizer minus padding. If your chart has a lot of data or other
	    // content, the redrawing might be slow. In that case, we recommend 
	    // that you use the 'stop' event instead of 'resize'.
	    resize: function() {
	        if (chart) chart.setSize(
	            this.offsetWidth - 20, 
	            this.offsetHeight - 20,
	            false
	        );
	    }
	});

	function hex2rgba(x,a) {
		  var r=x.replace('#','').match(/../g),g=[],i;
		  for(i in r){g.push(parseInt(r[i],16));}g.push(a);
		  return 'rgba('+g.join()+')';
		}
	
	function getColor(tag)
	{
		var idx = $.inArray(tag,Object.keys(sections));
		idx = (idx==-1)?2:idx;
		var clr = colorbrewer.Paired[11][idx];
		var clr2 = hex2rgba(clr,'0.2');
		return clr2;				
	}

	var tt = getColor('#+s:i#');


	chartOptions = {
		credits: {
            enabled: false
        },
        exporting: {
            enabled: true,
            sourceWidth: 1175 ,
            sourceHeight: 825,
        },
		chart: {
			renderTo: 'container',
			type: 'scatter',
			zoomType: 'x',
			reflow: true
		},
		title: {
			text: 'Keyword Dispersion'
		},
		tooltip: {
			formatter: function() {
				return this.series.name + ' ' + this.x;
	                }
	    },
	    xAxis: [{ // master axis
			min: 0,
			
	    	title: {
		    	enabled: false,
		        text: 'word count'
			},
			labels: {
				enabled: false
			},
			minRange: 200,
			startOnTick: false,
			endOnTick: false,
			showLastLabel: true,
			plotBands: [
				{% for key,band in structure %}
					{
						from: {{ band.from }},
						to: {{ band.to }},
						color: getColor('{{ band.tag }}'),
						 thickness: '5%'
					},
				{% endfor %}
				]
		}/*,{	// slave axis
			linkedTo:0 ,			
			minRange: 50,
			opposite: false,
	    	title: {
		    	enabled: false,
		        text: 'Essay Structure'
			},
			//tickPositions: {{ ticks|json_encode|raw }},
			labels: {
				enabled: false,
				 staggerLines: 1,
				 rotation: -90,
				formatter: function() {
					var gg = {{ tags|json_encode|raw }} 
					return gg[this.value];},
				},
		}*/],
		yAxis:{ minRange: 10,
			title: {
				enabled: false,
				text: null
			},
			min:0,
			
			startOnTick: true,
			endOnTick: true,
			tickInterval: 1,
			minorTickInterval: 1,
			type: 'category',
			categories:  {{ categories|json_encode|raw }},
			
			
		},
		plotOptions: {
			series: {
				stickyTracking: false
			},
			scatter: {
				marker: {
					symbol: 'diamond',
					radius: 5,
					states: {
						hover: {
							enabled: true,
							lineColor: 'rgb(100,100,100)'
						}
					}
				},
				states: {
					hover: {
						marker: {
							enabled: false
						}
					}
				}
			}
		},
		series: {{ series|json_encode|raw }}
			
	};

	chart = new Highcharts.Chart(chartOptions);

	
});

</script>
{% endblock %}

{% block injectCSS %}
	{{ parent() }}
<style type="text/css">
</style>
{% endblock %}